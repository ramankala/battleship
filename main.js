(()=>{"use strict";const e=e=>{const t=[];return{ship:t,length:e,hit:e=>t[e]="hit",isSunk:()=>{let r=0,o=!1;return t.forEach((function(e){"hit"===e&&(r+=1)})),o=r===e,o}}},t=(t,r=!1)=>{let o=e(5),i=e(4),l=e(3),a=e(3),n=e(2),s={name:t,isActive:r};return{get name(){return s.name},get isActive(){return s.isActive},toggle(){s.isActive=!s.isActive},board:(()=>{let e=[["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""]];for(let t=0;t<10;t++)for(let r=0;r<10;r++)e[t][r]={hasShip:!1,isShot:!1,shipLength:0,shipType:"n/a",xPoint:0,yPoint:0};return{gameBoard:e,placeHorizontal:(t,r,o,i)=>{for(let l=0;l<o;l++)e[t][r].hasShip=!0,e[t][r].shipLength=o,e[t][r].shipType=i,e[t][r].xPoint=t,e[t][r].yPoint=r,r+=1;return e},placeVert:(t,r,o,i)=>{for(let l=0;l<o;l++)e[t][r].hasShip=!0,e[t][r].shipLength=o,e[t][r].shipType=i,e[t][r].xPoint=t,e[t][r].yPoint=r,t+=1;return e},receiveAttack:(t,r)=>!0===e[t][r].hasShip?(e[t][r].isShot=!0,"Hit"):(e[t][r].isShot=!0,e),allShipsSunk:e=>e.filter((e=>e.isSunk())).length===e.length,scout:(t,r,o,i)=>{let l=!1;if("row"===i)for(let i=0;i<o;i++)!0===e[t][r].hasShip&&(l=!0),r+=1;else for(let i=0;i<o;i++)!0===e[t][r].hasShip&&(l=!0),t+=1;return l}}})(),ships:[o,i,l,a,n],enemyMove:()=>[Math.floor(10*Math.random()),Math.floor(10*Math.random())],pos5:0,pos4:0,pos3:0,pos2:0,pos1:0}},r=(e,t)=>{let r=document.querySelector(`#container${t}`),o=document.createElement("div");o.setAttribute("id","row1");let i=document.createElement("div");i.setAttribute("id","row2");let l=document.createElement("div");l.setAttribute("id","row3");let a=document.createElement("div");a.setAttribute("id","row4");let n=document.createElement("div");n.setAttribute("id","row5");let s=document.createElement("div");s.setAttribute("id","row6");let d=document.createElement("div");d.setAttribute("id","row7");let c=document.createElement("div");c.setAttribute("id","row8");let u=document.createElement("div");u.setAttribute("id","row9");let p=document.createElement("div");p.setAttribute("id","row10"),e.forEach((function(e,g){e.forEach((function(e,h){let m=document.createElement("div");m.setAttribute("id",`squareDiv${g}${h}`),m.setAttribute("data-y-coord",h),m.setAttribute("data-x-coord",g),m.setAttribute("data-has-ship",e.hasShip),m.setAttribute("data-is-shot",e.isShot),m.classList.add(`atkDiv${t}`),m.textContent=e.hasShip;for(let e=0;e<10;e++)m.getAttribute("id")==`squareDiv0${e}`?o.appendChild(m):m.getAttribute("id")==`squareDiv1${e}`?i.appendChild(m):m.getAttribute("id")==`squareDiv2${e}`?l.appendChild(m):m.getAttribute("id")==`squareDiv3${e}`?a.appendChild(m):m.getAttribute("id")==`squareDiv4${e}`?n.appendChild(m):m.getAttribute("id")==`squareDiv5${e}`?s.appendChild(m):m.getAttribute("id")==`squareDiv6${e}`?d.appendChild(m):m.getAttribute("id")==`squareDiv7${e}`?c.appendChild(m):m.getAttribute("id")==`squareDiv8${e}`?u.appendChild(m):m.getAttribute("id")==`squareDiv9${e}`&&p.appendChild(m);r.appendChild(o),r.appendChild(i),r.appendChild(l),r.appendChild(a),r.appendChild(n),r.appendChild(s),r.appendChild(d),r.appendChild(c),r.appendChild(u),r.appendChild(p)}))}))},o=(e,t,r,l)=>{let a=e.board;console.log(a);let n,s=e.ships,d=a.gameBoard[r][l].isShot,c=a.gameBoard[r][l].hasShip,u=a.gameBoard[r][l].shipLength,p=a.gameBoard[r][l].shipType;n=0===r?l:""+r+l;let g=document.getElementsByClassName("atkDiv1")[n];if(!0===t.isActive)if(!1===d){g.style.backgroundColor=!0===c?"red":"grey";let n=a.receiveAttack(r,l);if("Carrier"==p?(s.filter((e=>e.length==u))[0].hit(e.pos5),e.pos5+=1):"Battleship"==p?(s.filter((e=>e.length==u))[0].hit(e.pos4),e.pos4+=1):"Destroyer"==p?(s.filter((e=>e.length==u))[0].hit(e.pos3),e.pos3+=1):"Submarine"==p?(s.filter((e=>e.length==u))[1].hit(e.pos2),e.pos2+=1):"Patrolboat"==p&&(s.filter((e=>e.length==u))[0].hit(e.pos1),e.pos1+=1),!0===a.allShipsSunk(s))return console.log("Computer won!"),void i("Computer");if(!0===t.board.allShipsSunk(t.ships))return console.log("User won!"),void i("User");if("Hit"!==n)e.toggle(),t.toggle();else switch(Math.floor(2*Math.random())+1){case 1:l+1<10?o(e,t,r,l+1):o(e,t,r+1<10?r+1:r-1,l);case 2:r+1<10?o(e,t,r+1,l):o(e,t,r,l+1<10?l+1:l-1)}}else{let r=e.enemyMove();o(e,t,r[0],r[1])}},i=e=>{const t=document.querySelector("#gameContainer"),r=document.createElement("div");"Player"===e?r.textContent="You are the winner!":"Computer"===e&&(r.textContent="Computer is the winner!"),t.appendChild(r)};(()=>{const e=document.querySelector("#startBtn"),l=document.querySelector("#alignBtn"),a=document.querySelector("#Carrier"),n=document.querySelector("#Battleship"),s=document.querySelector("#Destroyer"),d=document.querySelector("#Submarine"),c=document.querySelector("#Patrolboat");a.classList.add("horizontal"),n.classList.add("horizontal"),s.classList.add("horizontal"),d.classList.add("horizontal"),c.classList.add("horizontal"),a.style.flexDirection="row",a.setAttribute("data-alignment","row");const u=[t("player1",!0),t("computer",!1)],p=e=>{e.dataTransfer.setData("text/plain",e.target.id),e.currentTarget.style.backgroundColor="green"};a.addEventListener("dragstart",p),n.addEventListener("dragstart",p),s.addEventListener("dragstart",p),d.addEventListener("dragstart",p),c.addEventListener("dragstart",p),r(u[0].board.gameBoard,1),l.addEventListener("click",(function(){"row"===a.style.flexDirection?(a.style.flexDirection="column",n.style.flexDirection="column",s.style.flexDirection="column",d.style.flexDirection="column",c.style.flexDirection="column",a.setAttribute("data-alignment","column")):(a.style.flexDirection="row",n.style.flexDirection="row",s.style.flexDirection="row",d.style.flexDirection="row",c.style.flexDirection="row",a.setAttribute("data-alignment","row"))})),(e=>{const t=e=>{e.preventDefault()},r=t=>{t.preventDefault(),console.log(t.target.getAttribute("data-y-coord")),console.log(t.target.getAttribute("data-x-coord"));let r=parseInt(t.target.getAttribute("data-x-coord")),o=parseInt(t.target.getAttribute("data-y-coord")),i=t.dataTransfer.getData("text"),l=document.querySelector("#Carrier"),a=document.querySelector("#Battleship"),n=document.querySelector("#Destroyer"),s=document.querySelector("#Submarine"),d=document.querySelector("#Patrolboat"),c=l.getAttribute("data-alignment");if(console.log(e),"Carrier"===i&&!1===e.scout(r,o,5,c)){if("row"===c){e.placeHorizontal(r,o,5,i);for(let e=0;e<5;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",o++}else if("column"===c){e.placeVert(r,o,5,i);for(let e=0;e<5;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",r++}l.style.display="none"}if("Battleship"===i&&!1===e.scout(r,o,4,c)){if("row"===c){e.placeHorizontal(r,o,4,i);for(let e=0;e<4;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",o++}else if("column"===c){e.placeVert(r,o,4,i);for(let e=0;e<4;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",r++}a.style.display="none"}if("Destroyer"===i&&!1===e.scout(r,o,3,c)){if("row"===c){e.placeHorizontal(r,o,3,i);for(let e=0;e<3;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",o++}else if("column"===c){e.placeVert(r,o,3,i);for(let e=0;e<3;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",r++}n.style.display="none"}if("Submarine"===i&&!1===e.scout(r,o,3,c)){if("row"===c){e.placeHorizontal(r,o,3,i);for(let e=0;e<3;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",o++}else if("column"===c){e.placeVert(r,o,3,i);for(let e=0;e<3;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",r++}s.style.display="none"}if("Patrolboat"===i&&!1===e.scout(r,o,2,c)){if("row"===c){e.placeHorizontal(r,o,2,i);for(let e=0;e<2;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",o++}else if("column"===c){e.placeVert(r,o,2,i);for(let e=0;e<2;e++)document.getElementById(`squareDiv${r}${o}`).style.backgroundColor="green",r++}d.style.display="none"}};let o=document.getElementsByClassName("atkDiv1");for(let e=0;e<o.length;e++)o[e].addEventListener("dragover",t),o[e].addEventListener("drop",r)})(u[0].board),e.addEventListener("click",(function(){const t=document.querySelector("#gameContainer"),a=document.querySelector("#container2"),n=document.querySelector("#gamerTag"),s=document.querySelector("#computerTag");(()=>{let e=document.querySelector("#container1");for(;e.firstChild;)e.removeChild(e.firstChild)})(),r(u[0].board.gameBoard,1),u[1].board.placeHorizontal(8,1,5,"Carrier"),u[1].board.placeHorizontal(3,5,4,"Battleship"),u[1].board.placeHorizontal(6,3,3,"Destroyer"),u[1].board.placeHorizontal(1,1,3,"Submarine"),u[1].board.placeHorizontal(0,6,2,"Patrolboat"),r(u[1].board.gameBoard,2),t.style.gap="10%",a.style.display="flex",n.style.gap="10%",s.style.display="flex",e.style.display="none",l.style.display="none",((e,t,r)=>{let l,a,n,s,d,c=t.board,u=t.ships,p=document.getElementsByClassName("atkDiv2");for(let r=0;r<p.length;r++)p[r].addEventListener("click",(function(r){if(!0===e.isActive&&(a=r.target.getAttribute("data-y-coord"),n=r.target.getAttribute("data-x-coord"),l=c.gameBoard[n][a].isShot,s=c.gameBoard[n][a].shipLength,d=c.gameBoard[n][a].shipType,!1===l)){"true"===r.target.getAttribute("data-has-ship")?r.target.style.backgroundColor="red":r.target.style.backgroundColor="grey",console.log(n),console.log(a);let l=c.receiveAttack(n,a);if("Carrier"==d){let e=u.filter((e=>e.length==s));console.log(e),e[0].hit(t.pos5),t.pos5+=1}else"Battleship"==d?(u.filter((e=>e.length==s))[0].hit(t.pos4),t.pos4+=1):"Destroyer"==d?(u.filter((e=>e.length==s))[0].hit(t.pos3),t.pos3+=1):"Submarine"==d?(u.filter((e=>e.length==s))[1].hit(t.pos2),t.pos2+=1):"Patrolboat"==d&&(u.filter((e=>e.length==s))[0].hit(t.pos1),t.pos1+=1);if(!0===c.allShipsSunk(u))return console.log("Player won!"),i("Player"),void e.toggle();if(!0===e.board.allShipsSunk(e.ships))return console.log("Computer won!"),i("Computer"),void t.toggle();"Hit"!==l&&(e.toggle(),t.toggle());let p=e.enemyMove();console.log(p),o(e,t,p[0],p[1])}}))})(u[0],u[1])}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
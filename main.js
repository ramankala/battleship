(()=>{"use strict";const e=e=>{const t=[];return{ship:t,length:e,hit:e=>t[e]="hit",isSunk:()=>{let i=0,r=!1;return t.forEach((function(e){"hit"===e&&(i+=1)})),r=i===e,r}}},t=(t,i=!1)=>{let r=e(5),a=e(4),o=e(3),l=e(3),d=e(2),n={name:t,isActive:i};return{get name(){return n.name},get isActive(){return n.isActive},toggle(){n.isActive=!n.isActive},board:(()=>{let e=[["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""]];for(let t=0;t<10;t++)for(let i=0;i<10;i++)e[t][i]={hasShip:!1,isShot:!1,shipLength:0,shipType:"n/a",xPoint:0,yPoint:0};return{gameBoard:e,placeShip:(t,i,r,a)=>{for(let o=0;o<r;o++)e[t][i].hasShip=!0,e[t][i].shipLength=r,e[t][i].shipType=a,e[t][i].xPoint=t,e[t][i].yPoint=i,i+=1;return e},receiveAttack:(t,i)=>!0===e[t][i].hasShip?(e[t][i].isShot=!0,"Hit"):(e[t][i].isShot=!0,e),allShipsSunk:e=>e.filter((e=>e.isSunk())).length===e.length}})(),ships:[r,a,o,l,d],enemyMove:()=>[Math.floor(10*Math.random()),Math.floor(10*Math.random())]}},i=(e,t)=>{let i=document.querySelector(`#container${t}`),r=document.createElement("div");r.setAttribute("id","row1");let a=document.createElement("div");a.setAttribute("id","row2");let o=document.createElement("div");o.setAttribute("id","row3");let l=document.createElement("div");l.setAttribute("id","row4");let d=document.createElement("div");d.setAttribute("id","row5");let n=document.createElement("div");n.setAttribute("id","row6");let h=document.createElement("div");h.setAttribute("id","row7");let s=document.createElement("div");s.setAttribute("id","row8");let p=document.createElement("div");p.setAttribute("id","row9");let u=document.createElement("div");u.setAttribute("id","row10"),e.forEach((function(e,c){e.forEach((function(e,g){let b=document.createElement("div");b.setAttribute("id",`squareDiv${c}${g}`),b.setAttribute("data-y-coord",g),b.setAttribute("data-x-coord",c),b.setAttribute("data-has-ship",e.hasShip),b.setAttribute("data-is-shot",e.isShot),b.classList.add(`atkDiv${t}`),b.textContent=e.hasShip;for(let e=0;e<10;e++)b.getAttribute("id")==`squareDiv0${e}`?r.appendChild(b):b.getAttribute("id")==`squareDiv1${e}`?a.appendChild(b):b.getAttribute("id")==`squareDiv2${e}`?o.appendChild(b):b.getAttribute("id")==`squareDiv3${e}`?l.appendChild(b):b.getAttribute("id")==`squareDiv4${e}`?d.appendChild(b):b.getAttribute("id")==`squareDiv5${e}`?n.appendChild(b):b.getAttribute("id")==`squareDiv6${e}`?h.appendChild(b):b.getAttribute("id")==`squareDiv7${e}`?s.appendChild(b):b.getAttribute("id")==`squareDiv8${e}`?p.appendChild(b):b.getAttribute("id")==`squareDiv9${e}`&&u.appendChild(b);i.appendChild(r),i.appendChild(a),i.appendChild(o),i.appendChild(l),i.appendChild(d),i.appendChild(n),i.appendChild(h),i.appendChild(s),i.appendChild(p),i.appendChild(u)}))}))},r=(e,t,i,a)=>{let o,l=e.board,d=e.ships,n=l.gameBoard[i][a].isShot,h=l.gameBoard[i][a].hasShip,s=l.gameBoard[i][a].shipLength,p=l.gameBoard[i][a].shipType;o=0===i?a:""+i+a;let u=document.getElementsByClassName("atkDiv1")[o],c=0,g=0,b=0,m=0,v=0;if(!0===t.isActive)if(!1===n){if(u.style.backgroundColor=!0===h?"red":"grey",l.receiveAttack(i,a),!0===l.allShipsSunk(d))return void console.log("Computer won!");if(!0===t.board.allShipsSunk(t.ships))return void console.log("User won!");"Carrier"==p?(d.filter((e=>e.length==s))[0].hit(c),c+=1):"Battleship"==p?(d.filter((e=>e.length==s))[0].hit(g),g+=1):"Destroyer"==p?(d.filter((e=>e.length==s))[0].hit(b),b+=1):"Submarine"==p?(d.filter((e=>e.length==s))[1].hit(m),m+=1):"Patrolboat"==p&&(d.filter((e=>e.length==s))[0].hit(v),v+=1),e.toggle(),t.toggle()}else{let i=e.enemyMove();r(e,t,i[0],i[1])}};(()=>{const e=[t("player1",!0),t("computer",!1)];e[0].board.placeShip(2,2,5,"Carrier"),e[0].board.placeShip(8,0,4,"Battleship"),e[0].board.placeShip(6,7,3,"Destroyer"),e[0].board.placeShip(5,1,3,"Submarine"),e[0].board.placeShip(1,7,2,"Patrolboat"),console.log(e[0].board.gameBoard),i(e[0].board.gameBoard,1),e[1].board.placeShip(8,1,5,"Carrier"),e[1].board.placeShip(3,5,4,"Battleship"),e[1].board.placeShip(6,3,3,"Destroyer"),e[1].board.placeShip(1,1,3,"Submarine"),e[1].board.placeShip(0,6,2,"Patrolboat"),console.log(e[1].board.gameBoard),i(e[1].board.gameBoard,2),((e,t,i)=>{let a,o,l,d,n,h=t.board,s=t.ships,p=document.getElementsByClassName("atkDiv2"),u=0,c=0,g=0,b=0,m=0;for(let i=0;i<p.length;i++)p[i].addEventListener("click",(function(i){if(!0===e.isActive&&(o=i.target.getAttribute("data-y-coord"),l=i.target.getAttribute("data-x-coord"),a=h.gameBoard[l][o].isShot,d=h.gameBoard[l][o].shipLength,n=h.gameBoard[l][o].shipType,!1===a)){if("true"===i.target.getAttribute("data-has-ship")?i.target.style.backgroundColor="red":i.target.style.backgroundColor="grey",console.log(l),console.log(o),h.receiveAttack(l,o),!0===h.allShipsSunk(s))return void console.log("Player won!");if(!0===e.board.allShipsSunk(e.ships))return void console.log("Computer won!");"Carrier"==n?(s.filter((e=>e.length==d))[0].hit(u),u+=1):"Battleship"==n?(s.filter((e=>e.length==d))[0].hit(c),c+=1):"Destroyer"==n?(s.filter((e=>e.length==d))[0].hit(g),g+=1):"Submarine"==n?(s.filter((e=>e.length==d))[1].hit(b),b+=1):"Patrolboat"==n&&(s.filter((e=>e.length==d))[0].hit(m),m+=1),e.toggle(),t.toggle();let a=e.enemyMove();console.log(a),r(e,t,a[0],a[1])}}))})(e[0],e[1])})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
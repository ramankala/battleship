(()=>{"use strict";const e=e=>{const t=[];return{ship:t,length:e,hit:e=>t[e]="hit",isSunk:()=>{let r=0,i=!1;return t.forEach((function(e){"hit"===e&&(r+=1)})),i=r===e,i}}},t=(t,r=!1)=>{let i=e(5),a=e(4),o=e(3),n=e(3),l=e(2),d={name:t,isActive:r};return{get name(){return d.name},get isActive(){return d.isActive},toggle(){d.isActive=!d.isActive},board:(()=>{let e=[["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""]];for(let t=0;t<10;t++)for(let r=0;r<10;r++)e[t][r]={hasShip:!1,isShot:!1,shipLength:0,shipType:"n/a",xPoint:0,yPoint:0};return{gameBoard:e,placeShip:(t,r,i,a)=>{for(let o=0;o<i;o++)e[t][r].hasShip=!0,console.log("hasShip works"),e[t][r].shipLength=i,console.log("shipLength works"),e[t][r].shipType=a,console.log("shipType works"),e[t][r].xPoint=t,console.log("xPoint works"),e[t][r].yPoint=r,console.log("yPoint works"),r+=1;return e},receiveAttack:(t,r)=>!0===e[t][r].hasShip?(e[t][r].isShot=!0,"Hit"):(e[t][r].isShot=!0,e),allShipsSunk:e=>e.filter((e=>e.isSunk())).length===e.length}})(),ships:[i,a,o,n,l],enemyMove:()=>[Math.floor(10*Math.random()),Math.floor(10*Math.random())]}},r=(e,t)=>{let r=document.querySelector(`#container${t}`),i=document.createElement("div");i.setAttribute("id","row1");let a=document.createElement("div");a.setAttribute("id","row2");let o=document.createElement("div");o.setAttribute("id","row3");let n=document.createElement("div");n.setAttribute("id","row4");let l=document.createElement("div");l.setAttribute("id","row5");let d=document.createElement("div");d.setAttribute("id","row6");let s=document.createElement("div");s.setAttribute("id","row7");let h=document.createElement("div");h.setAttribute("id","row8");let u=document.createElement("div");u.setAttribute("id","row9");let c=document.createElement("div");c.setAttribute("id","row10"),e.forEach((function(e,p){e.forEach((function(e,g){let m=document.createElement("div");m.setAttribute("id",`squareDiv${p}${g}`),m.setAttribute("data-y-coord",g),m.setAttribute("data-x-coord",p),m.setAttribute("data-has-ship",e.hasShip),m.setAttribute("data-is-shot",e.isShot),m.classList.add(`atkDiv${t}`),m.textContent=e.hasShip;for(let e=0;e<10;e++)m.getAttribute("id")==`squareDiv0${e}`?i.appendChild(m):m.getAttribute("id")==`squareDiv1${e}`?a.appendChild(m):m.getAttribute("id")==`squareDiv2${e}`?o.appendChild(m):m.getAttribute("id")==`squareDiv3${e}`?n.appendChild(m):m.getAttribute("id")==`squareDiv4${e}`?l.appendChild(m):m.getAttribute("id")==`squareDiv5${e}`?d.appendChild(m):m.getAttribute("id")==`squareDiv6${e}`?s.appendChild(m):m.getAttribute("id")==`squareDiv7${e}`?h.appendChild(m):m.getAttribute("id")==`squareDiv8${e}`?u.appendChild(m):m.getAttribute("id")==`squareDiv9${e}`&&c.appendChild(m);r.appendChild(i),r.appendChild(a),r.appendChild(o),r.appendChild(n),r.appendChild(l),r.appendChild(d),r.appendChild(s),r.appendChild(h),r.appendChild(u),r.appendChild(c)}))}))},i=(e,t,r)=>{let i,o,n,l,d,s=t.board,h=t.ships,u=document.getElementsByClassName(`atkDiv${r}`),c=0,p=0,g=0,m=0,v=0;for(let r=0;r<u.length;r++)u[r].addEventListener("click",(function(r){if(!0===e.isActive&&(o=r.target.getAttribute("data-y-coord"),n=r.target.getAttribute("data-x-coord"),i=s.gameBoard[n][o].isShot,l=s.gameBoard[n][o].shipLength,d=s.gameBoard[n][o].shipType,!1===i)){if("true"===r.target.getAttribute("data-has-ship")?r.target.style.backgroundColor="red":r.target.style.backgroundColor="grey",console.log(n),console.log(o),s.receiveAttack(n,o),!0===s.allShipsSunk(h))return void console.log("Player won!");if(!0===e.board.allShipsSunk(e.ships))return void console.log("Computer won!");"Carrier"==d?(h.filter((e=>e.length==l))[0].hit(c),c+=1):"Battleship"==d?(h.filter((e=>e.length==l))[0].hit(p),p+=1):"Destroyer"==d?(h.filter((e=>e.length==l))[0].hit(g),g+=1):"Submarine"==d?(h.filter((e=>e.length==l))[1].hit(m),m+=1):"Patrolboat"==d&&(h.filter((e=>e.length==l))[0].hit(v),v+=1),e.toggle(),t.toggle();let i=e.enemyMove();console.log(i),a(e,t,i[0],i[1])}}))},a=(e,t,r,i)=>{let o,n=e.board,l=e.ships,d=n.gameBoard[r][i].isShot,s=n.gameBoard[r][i].hasShip,h=n.gameBoard[r][i].shipLength,u=n.gameBoard[r][i].shipType;o=0===r?i:""+r+i;let c=document.getElementsByClassName("atkDiv1")[o],p=0,g=0,m=0,v=0,b=0;if(!0===t.isActive)if(!1===d){if(c.style.backgroundColor=!0===s?"red":"grey",n.receiveAttack(r,i),!0===n.allShipsSunk(l))return void console.log("Computer won!");if(!0===t.board.allShipsSunk(t.ships))return void console.log("User won!");"Carrier"==u?(l.filter((e=>e.length==h))[0].hit(p),p+=1):"Battleship"==u?(l.filter((e=>e.length==h))[0].hit(g),g+=1):"Destroyer"==u?(l.filter((e=>e.length==h))[0].hit(m),m+=1):"Submarine"==u?(l.filter((e=>e.length==h))[1].hit(v),v+=1):"Patrolboat"==u&&(l.filter((e=>e.length==h))[0].hit(b),b+=1),e.toggle(),t.toggle()}else{let r=e.enemyMove();a(e,t,r[0],r[1])}};(()=>{const e=document.querySelector("#startBtn"),a=e=>{e.dataTransfer.setData("text/plain",e.target.id),e.currentTarget.style.backgroundColor="green"};document.querySelector("#Carrier").addEventListener("dragstart",a),document.querySelector("#Battleship").addEventListener("dragstart",a),document.querySelector("#Destroyer").addEventListener("dragstart",a),document.querySelector("#Submarine").addEventListener("dragstart",a),document.querySelector("#PatrolBoat").addEventListener("dragstart",a);const o=[t("player1",!0),t("computer",!1)];r(o[0].board.gameBoard,1),(e=>{const t=e=>{e.preventDefault()},r=t=>{t.preventDefault(),t.target.style.backgroundColor="green",console.log(t.target.getAttribute("data-y-coord")),console.log(t.target.getAttribute("data-x-coord"));let r=t.target.getAttribute("data-x-coord"),i=t.target.getAttribute("data-y-coord"),a=t.dataTransfer.getData("text");console.log(e),"Carrier"===a&&e.placeShip(parseInt(r),parseInt(i),5,a),"Battleship"===a&&e.placeShip(parseInt(r),parseInt(i),4,a),"Destroyer"===a&&e.placeShip(parseInt(r),parseInt(i),3,a),"Submarine"===a&&e.placeShip(parseInt(r),parseInt(i),3,a),"PatrolBoat"===a&&e.placeShip(parseInt(r),parseInt(i),2,a)};let i=document.getElementsByClassName("atkDiv1");for(let e=0;e<i.length;e++)i[e].addEventListener("dragover",t),i[e].addEventListener("drop",r)})(o[0].board),e.addEventListener("click",(function(){(()=>{let e=document.querySelector("#container1");for(;e.firstChild;)e.removeChild(e.firstChild)})(),console.log(o[0].board.gameBoard),r(o[0].board.gameBoard,1),r(o[1].board.gameBoard,2),i(o[0],o[1],2),i(o[1],o[0],2)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";const e=e=>{const t=[];return{ship:t,length:e,hit:e=>t[e]="hit",isSunk:()=>{let r=0,i=!1;return t.forEach((function(e){"hit"===e&&(r+=1)})),i=r===e,i}}},t=(t,r=!1)=>{let i=e(5),o=e(4),l=e(3),a=e(3),n=e(2),d={name:t,isActive:r};return{get name(){return d.name},get isActive(){return d.isActive},toggle(){d.isActive=!d.isActive},board:(()=>{let e=[["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""]];for(let t=0;t<10;t++)for(let r=0;r<10;r++)e[t][r]={hasShip:!1,isShot:!1,shipLength:0,shipType:"n/a",xPoint:0,yPoint:0};return{gameBoard:e,placeHorizontal:(t,r,i,o)=>{for(let l=0;l<i;l++)e[t][r].hasShip=!0,e[t][r].shipLength=i,e[t][r].shipType=o,e[t][r].xPoint=t,e[t][r].yPoint=r,r+=1;return e},placeVert:(t,r,i,o)=>{for(let l=0;l<i;l++)e[t][r].hasShip=!0,e[t][r].shipLength=i,e[t][r].shipType=o,e[t][r].xPoint=t,e[t][r].yPoint=r,t+=1;return e},receiveAttack:(t,r)=>!0===e[t][r].hasShip?(e[t][r].isShot=!0,"Hit"):(e[t][r].isShot=!0,e),allShipsSunk:e=>e.filter((e=>e.isSunk())).length===e.length}})(),ships:[i,o,l,a,n],enemyMove:()=>[Math.floor(10*Math.random()),Math.floor(10*Math.random())]}},r=(e,t)=>{let r=document.querySelector(`#container${t}`),i=document.createElement("div");i.setAttribute("id","row1");let o=document.createElement("div");o.setAttribute("id","row2");let l=document.createElement("div");l.setAttribute("id","row3");let a=document.createElement("div");a.setAttribute("id","row4");let n=document.createElement("div");n.setAttribute("id","row5");let d=document.createElement("div");d.setAttribute("id","row6");let s=document.createElement("div");s.setAttribute("id","row7");let c=document.createElement("div");c.setAttribute("id","row8");let u=document.createElement("div");u.setAttribute("id","row9");let g=document.createElement("div");g.setAttribute("id","row10"),e.forEach((function(e,h){e.forEach((function(e,m){let p=document.createElement("div");p.setAttribute("id",`squareDiv${h}${m}`),p.setAttribute("data-y-coord",m),p.setAttribute("data-x-coord",h),p.setAttribute("data-has-ship",e.hasShip),p.setAttribute("data-is-shot",e.isShot),p.classList.add(`atkDiv${t}`),p.textContent=e.hasShip;for(let e=0;e<10;e++)p.getAttribute("id")==`squareDiv0${e}`?i.appendChild(p):p.getAttribute("id")==`squareDiv1${e}`?o.appendChild(p):p.getAttribute("id")==`squareDiv2${e}`?l.appendChild(p):p.getAttribute("id")==`squareDiv3${e}`?a.appendChild(p):p.getAttribute("id")==`squareDiv4${e}`?n.appendChild(p):p.getAttribute("id")==`squareDiv5${e}`?d.appendChild(p):p.getAttribute("id")==`squareDiv6${e}`?s.appendChild(p):p.getAttribute("id")==`squareDiv7${e}`?c.appendChild(p):p.getAttribute("id")==`squareDiv8${e}`?u.appendChild(p):p.getAttribute("id")==`squareDiv9${e}`&&g.appendChild(p);r.appendChild(i),r.appendChild(o),r.appendChild(l),r.appendChild(a),r.appendChild(n),r.appendChild(d),r.appendChild(s),r.appendChild(c),r.appendChild(u),r.appendChild(g)}))}))},i=(e,t,r)=>{let i,l,a,n,d,s=t.board,c=t.ships,u=document.getElementsByClassName(`atkDiv${r}`),g=0,h=0,m=0,p=0,f=0;for(let r=0;r<u.length;r++)u[r].addEventListener("click",(function(r){if(!0===e.isActive&&(l=r.target.getAttribute("data-y-coord"),a=r.target.getAttribute("data-x-coord"),i=s.gameBoard[a][l].isShot,n=s.gameBoard[a][l].shipLength,d=s.gameBoard[a][l].shipType,!1===i)){if("true"===r.target.getAttribute("data-has-ship")?r.target.style.backgroundColor="red":r.target.style.backgroundColor="grey",console.log(a),console.log(l),s.receiveAttack(a,l),!0===s.allShipsSunk(c))return void console.log("Player won!");if(!0===e.board.allShipsSunk(e.ships))return void console.log("Computer won!");"Carrier"==d?(c.filter((e=>e.length==n))[0].hit(g),g+=1):"Battleship"==d?(c.filter((e=>e.length==n))[0].hit(h),h+=1):"Destroyer"==d?(c.filter((e=>e.length==n))[0].hit(m),m+=1):"Submarine"==d?(c.filter((e=>e.length==n))[1].hit(p),p+=1):"Patrolboat"==d&&(c.filter((e=>e.length==n))[0].hit(f),f+=1),e.toggle(),t.toggle();let i=e.enemyMove();console.log(i),o(e,t,i[0],i[1])}}))},o=(e,t,r,i)=>{let l,a=e.board,n=e.ships,d=a.gameBoard[r][i].isShot,s=a.gameBoard[r][i].hasShip,c=a.gameBoard[r][i].shipLength,u=a.gameBoard[r][i].shipType;l=0===r?i:""+r+i;let g=document.getElementsByClassName("atkDiv1")[l],h=0,m=0,p=0,f=0,y=0;if(!0===t.isActive)if(!1===d){if(g.style.backgroundColor=!0===s?"red":"grey",a.receiveAttack(r,i),!0===a.allShipsSunk(n))return void console.log("Computer won!");if(!0===t.board.allShipsSunk(t.ships))return void console.log("User won!");"Carrier"==u?(n.filter((e=>e.length==c))[0].hit(h),h+=1):"Battleship"==u?(n.filter((e=>e.length==c))[0].hit(m),m+=1):"Destroyer"==u?(n.filter((e=>e.length==c))[0].hit(p),p+=1):"Submarine"==u?(n.filter((e=>e.length==c))[1].hit(f),f+=1):"Patrolboat"==u&&(n.filter((e=>e.length==c))[0].hit(y),y+=1),e.toggle(),t.toggle()}else{let r=e.enemyMove();o(e,t,r[0],r[1])}};(()=>{const e=document.querySelector("#startBtn"),o=document.querySelector("#alignBtn"),l=document.querySelector("#Carrier"),a=document.querySelector("#Battleship"),n=document.querySelector("#Destroyer"),d=document.querySelector("#Submarine"),s=document.querySelector("#PatrolBoat");l.classList.add("horizontal"),a.classList.add("horizontal"),n.classList.add("horizontal"),d.classList.add("horizontal"),s.classList.add("horizontal"),l.style.flexDirection="row",l.setAttribute("data-alignment","row");const c=[t("player1",!0),t("computer",!1)],u=e=>{e.dataTransfer.setData("text/plain",e.target.id),e.currentTarget.style.backgroundColor="green"};l.addEventListener("dragstart",u),a.addEventListener("dragstart",u),n.addEventListener("dragstart",u),d.addEventListener("dragstart",u),s.addEventListener("dragstart",u),r(c[0].board.gameBoard,1),o.addEventListener("click",(function(){"row"===l.style.flexDirection?(l.style.flexDirection="column",a.style.flexDirection="column",n.style.flexDirection="column",d.style.flexDirection="column",s.style.flexDirection="column",l.setAttribute("data-alignment","column")):(l.style.flexDirection="row",a.style.flexDirection="row",n.style.flexDirection="row",d.style.flexDirection="row",s.style.flexDirection="row",l.setAttribute("data-alignment","row"))})),(e=>{const t=e=>{e.preventDefault()},r=t=>{t.preventDefault(),console.log(t.target.getAttribute("data-y-coord")),console.log(t.target.getAttribute("data-x-coord"));let r=parseInt(t.target.getAttribute("data-x-coord")),i=parseInt(t.target.getAttribute("data-y-coord")),o=t.dataTransfer.getData("text"),l=document.querySelector("#Carrier").getAttribute("data-alignment");if(console.log(e),"Carrier"===o)if(console.log(l),"row"===l){e.placeHorizontal(r,i,5,o);for(let e=0;e<5;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",i++}else if("column"===l){e.placeVert(r,i,5,o);for(let e=0;e<5;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",r++}if("Battleship"===o)if("row"===l){e.placeHorizontal(r,i,4,o);for(let e=0;e<4;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",i++}else if("column"===l){e.placeVert(r,i,4,o);for(let e=0;e<4;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",r++}if("Destroyer"===o)if("row"===l){e.placeHorizontal(r,i,3,o);for(let e=0;e<3;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",i++}else if("column"===l){e.placeVert(r,i,3,o);for(let e=0;e<3;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",r++}if("Submarine"===o)if("row"===l){e.placeHorizontal(r,i,3,o);for(let e=0;e<3;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",i++}else if("column"===l){e.placeVert(r,i,3,o);for(let e=0;e<3;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",r++}if("PatrolBoat"===o)if("row"===l){e.placeHorizontal(r,i,2,o);for(let e=0;e<2;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",i++}else if("column"===l){e.placeVert(r,i,2,o);for(let e=0;e<2;e++)document.getElementById(`squareDiv${r}${i}`).style.backgroundColor="green",r++}};let i=document.getElementsByClassName("atkDiv1");for(let e=0;e<i.length;e++)i[e].addEventListener("dragover",t),i[e].addEventListener("drop",r)})(c[0].board),e.addEventListener("click",(function(){(()=>{let e=document.querySelector("#container1");for(;e.firstChild;)e.removeChild(e.firstChild)})(),r(c[0].board.gameBoard,1),r(c[1].board.gameBoard,2),i(c[0],c[1],2),i(c[1],c[0],2)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,